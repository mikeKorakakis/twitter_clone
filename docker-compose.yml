version: '3.8'

services:
  client: 
    container_name: client
    environment:
      VIRTUAL_HOST: twitter.korakakis.com
      LETSENCRYPT_HOST: twitter.korakakis.com
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    build:
      dockerfile: Dockerfile
      context: ./frontend
    # volumes:
    #   - ./frontend:/twitter_clone/frontend
    #   - /twitter_clone/frontend/node_modules/
    depends_on: 
      - server
    ports:
      - 3000:3000
    links:
      - server
    networks:
      - main-network
    restart: unless-stopped
  server:
    container_name: server
    environment:
      VIRTUAL_HOST: twitter-api.korakakis.com
      LETSENCRYPT_HOST: twitter-api.korakakis.com
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    build:
      dockerfile: Dockerfile
      context: ./backend
      target: production
    env_file: ./backend/.env.production
    # volumes:
    #   - ./backend:/twitter_clone/backend
    #   - /twitter_clone/backend/node_modules/
    command: npm run start
    depends_on: 
      - postgres-main
      - redis-main
    ports:
      - 4000:4000
    networks:
      - main-network
    restart: unless-stopped

  queue-worker:
    container_name: queue-worker
    build:
      dockerfile: Dockerfile
      context: ./workers/queues
      target: production
    env_file: ./workers/queues/.env.production
    # volumes:
    #   - ./workers/queues:/twitter_clone/workers/queues
    #   - /twitter_clone/workers/queues/node_modules/
    command: npm run start:debug
    depends_on: 
      - server
    networks:
      - main-network
    restart: unless-stopped

  postgres-main:
    container_name: postgres-nest
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres-nest
      PGDATA: /data/postgres
    volumes:
       - postgres-volume:/data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres-network
      - main-network
    restart: unless-stopped
  
  pgadmin-main:
    container_name: pgadmin-nest
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      VIRTUAL_HOST: pgadmin.korakakis.com
      LETSENCRYPT_HOST: pgadmin.korakakis.com
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    volumes:
       - pgadmin-volume:/data/pgadmin
    ports:
      - 5555:5555
    depends_on:
      - postgres-main
    networks:
      - postgres-network
    restart: unless-stopped

  redis-main:
    container_name: redis-nest
    image: redis:latest
    
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-volume:/data/redis
    networks:
      - redis-network
      - main-network
    restart: unless-stopped

  # redis-commander:
  #   container_name: redis-commander-nest
  #   image: rediscommander/redis-commander:latest
  #   environment:
  #     - REDIS_HOSTS=local:redis-main:6379
  #     - HTTP_USER=root
  #     - HTTP_PASSWORD=qwerty
  #   ports:
  #     - 8081:8081
  #   depends_on:
  #     - redis-main
  #   networks:
  #     - redis-network
  #   restart: unless-stopped
  proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    restart: unless-stopped
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"

  proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: unless-stopped
    environment:
      NGINX_PROXY_CONTAINER: proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    depends_on:
      - "proxy"

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    environment:
      VIRTUAL_PORT: 9000 
      VIRTUAL_HOST: portainer.korakakis.com
      LETSENCRYPT_HOST: portainer.korakakis.com
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"

networks:
  postgres-network:
    driver: bridge
  main-network:
    driver: bridge
  redis-network:
    driver: bridge

volumes:
  docker_sock:
  postgres-volume:
  pgadmin-volume:
  redis-volume:
  portainer:
  certs:
  vhost.d:
  html: